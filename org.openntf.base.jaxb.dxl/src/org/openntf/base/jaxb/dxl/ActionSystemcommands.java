//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.23 at 02:06:11 PM CET 
//


package org.openntf.base.jaxb.dxl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for action.systemcommands.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="action.systemcommands">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="categorize"/>
 *     &lt;enumeration value="edit"/>
 *     &lt;enumeration value="send"/>
 *     &lt;enumeration value="forward"/>
 *     &lt;enumeration value="movetofolder"/>
 *     &lt;enumeration value="removefromfolder"/>
 *     &lt;enumeration value="removefromfolder"/>
 *     &lt;enumeration value="markread"/>
 *     &lt;enumeration value="markunread"/>
 *     &lt;enumeration value="openinnewwindow"/>
 *     &lt;enumeration value="print"/>
 *     &lt;enumeration value="delete"/>
 *     &lt;enumeration value="properties"/>
 *     &lt;enumeration value="cut"/>
 *     &lt;enumeration value="copy"/>
 *     &lt;enumeration value="copyasdoclink"/>
 *     &lt;enumeration value="copyastable"/>
 *     &lt;enumeration value="paste"/>
 *     &lt;enumeration value="open"/>
 *     &lt;enumeration value="bookmark"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "action.systemcommands", namespace = "http://www.lotus.com/dxl")
@XmlEnum
public enum ActionSystemcommands {

    @XmlEnumValue("categorize")
    CATEGORIZE("categorize"),
    @XmlEnumValue("edit")
    EDIT("edit"),
    @XmlEnumValue("send")
    SEND("send"),
    @XmlEnumValue("forward")
    FORWARD("forward"),
    @XmlEnumValue("movetofolder")
    MOVETOFOLDER("movetofolder"),
    @XmlEnumValue("removefromfolder")
    REMOVEFROMFOLDER("removefromfolder"),
    @XmlEnumValue("markread")
    MARKREAD("markread"),
    @XmlEnumValue("markunread")
    MARKUNREAD("markunread"),
    @XmlEnumValue("openinnewwindow")
    OPENINNEWWINDOW("openinnewwindow"),
    @XmlEnumValue("print")
    PRINT("print"),
    @XmlEnumValue("delete")
    DELETE("delete"),
    @XmlEnumValue("properties")
    PROPERTIES("properties"),
    @XmlEnumValue("cut")
    CUT("cut"),
    @XmlEnumValue("copy")
    COPY("copy"),
    @XmlEnumValue("copyasdoclink")
    COPYASDOCLINK("copyasdoclink"),
    @XmlEnumValue("copyastable")
    COPYASTABLE("copyastable"),
    @XmlEnumValue("paste")
    PASTE("paste"),
    @XmlEnumValue("open")
    OPEN("open"),
    @XmlEnumValue("bookmark")
    BOOKMARK("bookmark");
    private final String value;

    ActionSystemcommands(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ActionSystemcommands fromValue(String v) {
        for (ActionSystemcommands c: ActionSystemcommands.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

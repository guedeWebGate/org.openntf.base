//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.23 at 02:06:11 PM CET 
//


package org.openntf.base.jaxb.dxl;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for background complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="background">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice minOccurs="0">
 *         &lt;element name="gif" type="{http://www.lotus.com/dxl}gif"/>
 *         &lt;element name="jpeg" type="{http://www.lotus.com/dxl}jpeg"/>
 *         &lt;element name="notesbitmap" type="{http://www.w3.org/2001/XMLSchema}base64Binary"/>
 *         &lt;element name="cgm" type="{http://www.lotus.com/dxl}cgm"/>
 *         &lt;element name="imageref" type="{http://www.lotus.com/dxl}imageref"/>
 *       &lt;/choice>
 *       &lt;attribute name="allowoverride" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="hide" type="{http://www.lotus.com/dxl}background.hide.tokens" default="none" />
 *       &lt;attribute name="tile" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="repeat" type="{http://www.lotus.com/dxl}cellbackground.repeats" default="tile" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "background", namespace = "http://www.lotus.com/dxl", propOrder = {
    "gif",
    "jpeg",
    "notesbitmap",
    "cgm",
    "imageref"
})
public class Background {

    protected Gif gif;
    protected Jpeg jpeg;
    protected byte[] notesbitmap;
    protected Cgm cgm;
    protected Imageref imageref;
    @XmlAttribute
    protected Boolean allowoverride;
    @XmlAttribute
    protected BackgroundHideTokens hide;
    @XmlAttribute
    protected Boolean tile;
    @XmlAttribute
    protected CellbackgroundRepeats repeat;

    /**
     * Gets the value of the gif property.
     * 
     * @return
     *     possible object is
     *     {@link Gif }
     *     
     */
    public Gif getGif() {
        return gif;
    }

    /**
     * Sets the value of the gif property.
     * 
     * @param value
     *     allowed object is
     *     {@link Gif }
     *     
     */
    public void setGif(Gif value) {
        this.gif = value;
    }

    /**
     * Gets the value of the jpeg property.
     * 
     * @return
     *     possible object is
     *     {@link Jpeg }
     *     
     */
    public Jpeg getJpeg() {
        return jpeg;
    }

    /**
     * Sets the value of the jpeg property.
     * 
     * @param value
     *     allowed object is
     *     {@link Jpeg }
     *     
     */
    public void setJpeg(Jpeg value) {
        this.jpeg = value;
    }

    /**
     * Gets the value of the notesbitmap property.
     * 
     * @return
     *     possible object is
     *     byte[]
     */
    public byte[] getNotesbitmap() {
        return notesbitmap;
    }

    /**
     * Sets the value of the notesbitmap property.
     * 
     * @param value
     *     allowed object is
     *     byte[]
     */
    public void setNotesbitmap(byte[] value) {
        this.notesbitmap = ((byte[]) value);
    }

    /**
     * Gets the value of the cgm property.
     * 
     * @return
     *     possible object is
     *     {@link Cgm }
     *     
     */
    public Cgm getCgm() {
        return cgm;
    }

    /**
     * Sets the value of the cgm property.
     * 
     * @param value
     *     allowed object is
     *     {@link Cgm }
     *     
     */
    public void setCgm(Cgm value) {
        this.cgm = value;
    }

    /**
     * Gets the value of the imageref property.
     * 
     * @return
     *     possible object is
     *     {@link Imageref }
     *     
     */
    public Imageref getImageref() {
        return imageref;
    }

    /**
     * Sets the value of the imageref property.
     * 
     * @param value
     *     allowed object is
     *     {@link Imageref }
     *     
     */
    public void setImageref(Imageref value) {
        this.imageref = value;
    }

    /**
     * Gets the value of the allowoverride property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAllowoverride() {
        return allowoverride;
    }

    /**
     * Sets the value of the allowoverride property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAllowoverride(Boolean value) {
        this.allowoverride = value;
    }

    /**
     * Gets the value of the hide property.
     * 
     * @return
     *     possible object is
     *     {@link BackgroundHideTokens }
     *     
     */
    public BackgroundHideTokens getHide() {
        if (hide == null) {
            return BackgroundHideTokens.NONE;
        } else {
            return hide;
        }
    }

    /**
     * Sets the value of the hide property.
     * 
     * @param value
     *     allowed object is
     *     {@link BackgroundHideTokens }
     *     
     */
    public void setHide(BackgroundHideTokens value) {
        this.hide = value;
    }

    /**
     * Gets the value of the tile property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTile() {
        return tile;
    }

    /**
     * Sets the value of the tile property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTile(Boolean value) {
        this.tile = value;
    }

    /**
     * Gets the value of the repeat property.
     * 
     * @return
     *     possible object is
     *     {@link CellbackgroundRepeats }
     *     
     */
    public CellbackgroundRepeats getRepeat() {
        if (repeat == null) {
            return CellbackgroundRepeats.TILE;
        } else {
            return repeat;
        }
    }

    /**
     * Sets the value of the repeat property.
     * 
     * @param value
     *     allowed object is
     *     {@link CellbackgroundRepeats }
     *     
     */
    public void setRepeat(CellbackgroundRepeats value) {
        this.repeat = value;
    }

}

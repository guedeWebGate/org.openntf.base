//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.23 at 02:06:11 PM CET 
//


package org.openntf.base.jaxb.dxl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for complex.aligns.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="complex.aligns">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="topleft"/>
 *     &lt;enumeration value="topcenter"/>
 *     &lt;enumeration value="topright"/>
 *     &lt;enumeration value="middleleft"/>
 *     &lt;enumeration value="middlecenter"/>
 *     &lt;enumeration value="middleright"/>
 *     &lt;enumeration value="bottomleft"/>
 *     &lt;enumeration value="bottomcenter"/>
 *     &lt;enumeration value="bottomright"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "complex.aligns", namespace = "http://www.lotus.com/dxl")
@XmlEnum
public enum ComplexAligns {

    @XmlEnumValue("topleft")
    TOPLEFT("topleft"),
    @XmlEnumValue("topcenter")
    TOPCENTER("topcenter"),
    @XmlEnumValue("topright")
    TOPRIGHT("topright"),
    @XmlEnumValue("middleleft")
    MIDDLELEFT("middleleft"),
    @XmlEnumValue("middlecenter")
    MIDDLECENTER("middlecenter"),
    @XmlEnumValue("middleright")
    MIDDLERIGHT("middleright"),
    @XmlEnumValue("bottomleft")
    BOTTOMLEFT("bottomleft"),
    @XmlEnumValue("bottomcenter")
    BOTTOMCENTER("bottomcenter"),
    @XmlEnumValue("bottomright")
    BOTTOMRIGHT("bottomright");
    private final String value;

    ComplexAligns(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ComplexAligns fromValue(String v) {
        for (ComplexAligns c: ComplexAligns.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.23 at 02:06:11 PM CET 
//


package org.openntf.base.jaxb.dxl;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for datechoice.conditions.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="datechoice.conditions">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="on"/>
 *     &lt;enumeration value="after"/>
 *     &lt;enumeration value="before"/>
 *     &lt;enumeration value="noton"/>
 *     &lt;enumeration value="inlast"/>
 *     &lt;enumeration value="innext"/>
 *     &lt;enumeration value="olderthan"/>
 *     &lt;enumeration value="afternext"/>
 *     &lt;enumeration value="between"/>
 *     &lt;enumeration value="notbetween"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "datechoice.conditions", namespace = "http://www.lotus.com/dxl")
@XmlEnum
public enum DatechoiceConditions {

    @XmlEnumValue("on")
    ON("on"),
    @XmlEnumValue("after")
    AFTER("after"),
    @XmlEnumValue("before")
    BEFORE("before"),
    @XmlEnumValue("noton")
    NOTON("noton"),
    @XmlEnumValue("inlast")
    INLAST("inlast"),
    @XmlEnumValue("innext")
    INNEXT("innext"),
    @XmlEnumValue("olderthan")
    OLDERTHAN("olderthan"),
    @XmlEnumValue("afternext")
    AFTERNEXT("afternext"),
    @XmlEnumValue("between")
    BETWEEN("between"),
    @XmlEnumValue("notbetween")
    NOTBETWEEN("notbetween");
    private final String value;

    DatechoiceConditions(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DatechoiceConditions fromValue(String v) {
        for (DatechoiceConditions c: DatechoiceConditions.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
